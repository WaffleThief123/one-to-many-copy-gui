name: Build and Release Sync Tool

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      asset_path: ${{ steps.asset.outputs.asset }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install pyinstaller
      - run: |
          pyinstaller --onefile --windowed ui_copy_tool.py
          copy ignored_extensions.json dist\
      - id: asset
        run: echo "asset=dist\\ui_copy_tool.exe" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: one-to-many-windows
          path: dist\*

  build-linux:
    runs-on: ubuntu-latest
    outputs:
      asset_path: ${{ steps.asset.outputs.asset }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install pyinstaller
      - run: |
          pyinstaller --onefile --windowed ui_copy_tool.py
          cp ignored_extensions.json dist/
      - id: asset
        run: echo "asset=dist/ui_copy_tool" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: one-to-many-linux
          path: dist/*

  build-macos-intel:
    runs-on: macos-13
    outputs:
      asset_path: ${{ steps.asset.outputs.asset }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install pyinstaller
      - run: |
          pyinstaller --onefile --windowed ui_copy_tool.py
          cp ignored_extensions.json dist/
      - id: asset
        run: echo "asset=dist/ui_copy_tool" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: one-to-many-macos-intel
          path: dist/*

  build-macos-arm64:
    runs-on: macos-14
    outputs:
      asset_path: ${{ steps.asset.outputs.asset }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install pyinstaller
      - run: |
          pyinstaller --onefile --windowed ui_copy_tool.py
          cp ignored_extensions.json dist/
      - id: asset
        run: echo "asset=dist/ui_copy_tool" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: one-to-many-macos-arm64
          path: dist/*

  release:
    needs: [build-windows, build-linux, build-macos-intel, build-macos-arm64]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
    
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
        
      - name: Authenticate gh CLI
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ github.ref_name }}
          RELEASE_NAME="Release $TAG_NAME"
        
          gh release create "$TAG_NAME" \
            artifacts/one-to-many-windows/ui_copy_tool.exe#ui_copy_tool-windows.exe \
            artifacts/one-to-many-linux/ui_copy_tool#ui_copy_tool-linux \
            artifacts/one-to-many-macos-intel/ui_copy_tool#ui_copy_tool-macos-intel \
            artifacts/one-to-many-macos-arm64/ui_copy_tool#ui_copy_tool-macos-arm64 \
            --title "$RELEASE_NAME" \
            --notes "Automated release for $TAG_NAME"
        